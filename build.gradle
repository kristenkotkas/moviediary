buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath group: 'com.h2database', name: 'h2', version: '1.4.196'
    classpath group: 'io.github.jklingsporn', name: 'vertx-jooq-generate', version: '3.0.1'
  }
}

plugins {
  id 'application'
  id 'java'
  id 'idea'
  id "com.github.johnrengelman.shadow" version "2.0.4"
  id 'org.hidetake.ssh' version '2.9.0'
  id 'nu.studer.jooq' version '2.0.9'
}

repositories {
  mavenCentral()
  jcenter()
}

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

dependencies {
  compile files('/libs/templ-handlebars.jar')
  compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
  compile group: 'com.github.jknack', name: 'handlebars', version: '4.0.6'
  compile group: 'io.vertx', name: 'vertx-core', version: '3.5.1'
  compile group: 'io.vertx', name: 'vertx-web', version: '3.5.1'
  compile group: 'io.vertx', name: 'vertx-rx-java', version: '3.5.1'
  compile group: 'io.vertx', name: 'vertx-mail-client', version: '3.5.1'
  compile group: 'io.vertx', name: 'vertx-jdbc-client', version: '3.5.1'
  compile group: 'io.vertx', name: 'vertx-web-client', version: '3.5.1'
  compile group: 'org.pac4j', name: 'vertx-pac4j', version: '3.0.0'
  compile group: 'org.pac4j', name: 'pac4j-oauth', version: '2.0.0'

  compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.8.8'
  compile 'org.codehaus.woodstox:woodstox-core-asl:4.4.1'

  compile group: 'com.h2database', name: 'h2', version: '1.4.196'
  compile group: 'io.github.jklingsporn', name: 'vertx-jooq-classic-jdbc', version: '3.0.1'

  jooqRuntime group: 'io.github.jklingsporn', name: 'vertx-jooq-generate', version: '3.0.1'
  jooqRuntime group: 'com.h2database', name: 'h2', version: '1.4.196'

  compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.20'

  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'io.vertx', name: 'vertx-unit', version: '3.5.1'
  testCompile group: 'org.awaitility', name: 'awaitility', version: '3.0.0'
  testCompile group: 'ch.vorburger.mariaDB4j', name: 'mariaDB4j', version: '2.2.3'
  testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.4.0'
  testCompile group: 'xml-apis', name: 'xml-apis', version: '1.4.01'
}

configurations.all {
  //noinspection GroovyAssignabilityCheck
  resolutionStrategy {
    force 'xml-apis:xml-apis:1.4.01' //selenium dependency fix
  }
}

mainClassName = 'server.Launcher'

shadowJar {
  baseName = 'moviediary'
  classifier = ''
}

remotes {
  master {
    role 'master'
    host = 'kyngas.eu'
    user = 'moviediary'
    identity = file('misc/id_rsa')
  }
}

ssh.settings {
  knownHosts = file('/misc/known_hosts')
}


task deployMovieDiary(dependsOn: shadowJar) {
  doLast {
    ssh.run {
      session(remotes.master) {
        put from: 'build/libs/moviediary.jar', into: '/home/moviediary/'
        put from: 'recommender-python/Server.py', into: '/home/moviediary/'
        execute './run-moviediary.sh'
      }
    }
    println ':deploy:done'
  }
}

task deployPythonResources() {
  doLast {
    ssh.run {
      session(remotes.master) {
        put from: 'recommender-python/resources/', into: '/home/moviediary/resources/'
      }
    }
    println ':deploy:Python resources uploaded'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.7'
  //noinspection UnnecessaryQualifiedReference
  distributionType = Wrapper.DistributionType.BIN
}

sourceSets {
  main {
    java {
      srcDirs += 'src/main/gen'
    }
  }
}

jooq {
  moviediary(sourceSets.main) {
    jdbc {
      driver = 'org.h2.Driver'
      url = 'jdbc:h2:file:./MovieDiary'
      user = 'sa'
      password = ''
      schema = 'PUBLIC'
    }
    generator {
      name = 'io.github.jklingsporn.vertx.jooq.generate.VertxGenerator'
      strategy {
        name = 'io.github.jklingsporn.vertx.jooq.generate.classic.JDBCClassicVertxGeneratorStrategy'
      }
      database {
        name = 'org.jooq.util.h2.H2Database'
        includes = '.*'
        excludes = 'schema_version|flyway_schema_history|.*_A'
        inputSchema = 'PUBLIC'
        includeTables = true
        includeRoutines = true
        includePackages = false
        includeUDTs = true
        includeSequences = true
      }
      generate {
        deprecated = false
        records = false
        interfaces = true
        fluentSetters = true
        pojos = true
        daos = true
      }
      target {
        packageName = 'eu.moviediary.database'
        directory = 'src/main/gen'
      }
    }
  }
}