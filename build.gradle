buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath group: 'com.esyfur', name: 'gradle-config-plugin', version: '0.4.+'
  }
}

plugins {
  id 'application'
  id "com.github.johnrengelman.shadow" version "1.2.4"
  id 'org.hidetake.ssh' version '2.9.0'
  id 'io.franzbecker.gradle-lombok' version '1.10' apply false
}

apply plugin: 'config'

allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'io.franzbecker.gradle-lombok'
  group 'eu.kyngas.movies'
  targetCompatibility = cfg.ver.java
  sourceCompatibility = cfg.ver.java
  repositories {
    mavenCentral()
    jcenter()
  }
  dependencies {
    compileOnly group: 'io.vertx', name: 'vertx-codegen', version: "${cfg.ver.vertx}"
  }
  sourceSets {
    main {
      java {
        srcDirs += 'src/main/gen'
      }
    }
  }
  idea {
    module {
      generatedSourceDirs += file('src/main/gen')
      outputDir = file("${projectDir}/build/classes/main")
      testOutputDir = file("${projectDir}/build/classes/test")
    }
  }
  task apiGen(type: JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly
    destinationDir = project.file('src/main/gen')
    options.compilerArgs = [
        '-proc:only',
        '-processor',
        'io.vertx.codegen.CodeGenProcessor',
        "-Acodegen.output=${project.projectDir}/src/main/gen",
        '-Acodegen.generators=RxJava,service_proxies,sockjs_service_proxies'
    ]
  }
  compileJava {
    options.encoding = 'UTF-8'
    dependsOn apiGen
    //todo dependsOn webpack compilation (npm run prod)
  }
  task apiClean(type: Delete) {
    //noinspection GroovyAssignabilityCheck
    delete 'src/main/gen'
  }
  clean.dependsOn apiClean
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.2.1'
  //noinspection UnnecessaryQualifiedReference
  distributionType = Wrapper.DistributionType.ALL
}




//v1 build.gradle

dependencies {
  compile files('/libs/templ-handlebars.jar')
  compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
  compile group: 'com.github.jknack', name: 'handlebars', version: '4.0.6'
  compile group: 'io.vertx', name: 'vertx-core', version: '3.4.2'
  compile group: 'io.vertx', name: 'vertx-web', version: '3.4.2'
  compile group: 'io.vertx', name: 'vertx-rx-java', version: '3.4.2'
  compile group: 'io.vertx', name: 'vertx-mail-client', version: '3.4.2'
  compile group: 'io.vertx', name: 'vertx-jdbc-client', version: '3.4.2'
  compile group: 'io.vertx', name: 'vertx-web-client', version: '3.4.2'
  compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
  compile group: 'org.pac4j', name: 'vertx-pac4j', version: '3.0.0'
  compile group: 'org.pac4j', name: 'pac4j-oauth', version: '2.0.0'

  compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.8.8'
  compile 'org.codehaus.woodstox:woodstox-core-asl:4.4.1'

  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'io.vertx', name: 'vertx-unit', version: '3.4.2'
  testCompile group: 'org.awaitility', name: 'awaitility', version: '3.0.0'
  testCompile group: 'ch.vorburger.mariaDB4j', name: 'mariaDB4j', version: '2.2.3'
  testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.4.0'
  testCompile group: 'xml-apis', name: 'xml-apis', version: '1.4.01'
}

configurations.all {
  //noinspection GroovyAssignabilityCheck
  resolutionStrategy {
    force 'xml-apis:xml-apis:1.4.01' //selenium dependency fix
  }
}

mainClassName = 'server.Launcher'

shadowJar {
  baseName = 'moviediary'
  classifier = ''
}

remotes {
  master {
    role 'master'
    host = 'kyngas.eu'
    user = 'moviediary'
    identity = file('misc/id_rsa')
  }
}

ssh.settings {
  knownHosts = file('/misc/known_hosts')
}


task deployMovieDiary(dependsOn: shadowJar) {
  doLast {
    ssh.run {
      session(remotes.master) {
        put from: 'build/libs/moviediary.jar', into: '/home/moviediary/'
        put from: 'recommender-python/Server.py', into: '/home/moviediary/'
        put from: 'recommender-python/resources/final-new-movies.csv', into: '/home/moviediary/resources/'
        put from: 'recommender-python/resources/model.npz', into: '/home/moviediary/resources/'
        execute './run-moviediary.sh'
      }
    }
    println ':deploy:done'
  }
}
